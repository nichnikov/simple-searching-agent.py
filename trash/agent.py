# agent.py

import os
from dotenv import load_dotenv

from langchain_openai import ChatOpenAI
from langchain.agents import AgentExecutor, create_react_agent
from langchain import hub

from tools import GlavbukhSearchTool

# --- –ù–∞—Å—Ç—Ä–æ–π–∫–∞ ---
# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è (OPENAI_API_KEY)
load_dotenv()

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–ª—é—á–∞ API
if not os.getenv("OPENAI_API_KEY"):
    raise ValueError("–ù–µ–æ–±—Ö–æ–¥–∏–º–æ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è OPENAI_API_KEY")

# --- –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –ê–≥–µ–Ω—Ç–∞ ---

# 1. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º LLM –æ—Ç OpenAI
# –ò—Å–ø–æ–ª—å–∑—É–µ–º gpt-4-turbo –¥–ª—è –ª—É—á—à–∏—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –≤ —Å–ª–µ–¥–æ–≤–∞–Ω–∏–∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º
llm = ChatOpenAI(model="google/gemini-2.5-pro", temperature=0)

# 2. –°–æ–∑–¥–∞–µ–º —Å–ø–∏—Å–æ–∫ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤, –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ê–≥–µ–Ω—Ç—É
# –í –Ω–∞—à–µ–º —Å–ª—É—á–∞–µ —ç—Ç–æ —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–ª—è –ø–æ–∏—Å–∫–∞
tools = [GlavbukhSearchTool()]

# 3. –ó–∞–≥—Ä—É–∂–∞–µ–º –≥–æ—Ç–æ–≤—ã–π –ø—Ä–æ–º–ø—Ç (—à–∞–±–ª–æ–Ω) –¥–ª—è ReAct –∞–≥–µ–Ω—Ç–∞
# –≠—Ç–æ—Ç –ø—Ä–æ–º–ø—Ç –æ–±—ä—è—Å–Ω—è–µ—Ç LLM, –∫–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã
prompt = hub.pull("hwchase17/react")

# --- –°–æ–∑–¥–∞–Ω–∏–µ –∏ –∑–∞–ø—É—Å–∫ –ê–≥–µ–Ω—Ç–∞ ---

# 4. –°–æ–∑–¥–∞–µ–º —Å–∞–º–æ–≥–æ –ê–≥–µ–Ω—Ç–∞, –ø–µ—Ä–µ–¥–∞–≤–∞—è –µ–º—É LLM, –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –∏ –ø—Ä–æ–º–ø—Ç
agent = create_react_agent(llm, tools, prompt)

# 5. –°–æ–∑–¥–∞–µ–º "–∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è" (Executor), –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç —É–ø—Ä–∞–≤–ª—è—Ç—å —Ü–∏–∫–ª–∞–º–∏ ReAct
# (Reasoning -> Action -> Observation)
# verbose=True –ø–æ–∑–≤–æ–ª—è–µ—Ç –≤–∏–¥–µ—Ç—å "–º—ã—Å–ª–∏" –∞–≥–µ–Ω—Ç–∞ –≤ –∫–æ–Ω—Å–æ–ª–∏
agent_executor = AgentExecutor(agent=agent, tools=tools, verbose=True)


# --- –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è ---
def main():
    """
    –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –ê–≥–µ–Ω—Ç–æ–º.
    """
    print("ü§ñ –ê–≥–µ–Ω—Ç-–ø–æ–º–æ—â–Ω–∏–∫ –ø–æ –±—É—Ö–≥–∞–ª—Ç–µ—Ä–∏–∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ.")
    print("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å –∏–ª–∏ '–≤—ã—Ö–æ–¥' –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è.")
    
    while True:
        user_query = input("\n–í–∞—à –≤–æ–ø—Ä–æ—Å: ")
        if user_query.lower() == '–≤—ã—Ö–æ–¥':
            break
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –∞–≥–µ–Ω—Ç–∞ —Å –∑–∞–ø—Ä–æ—Å–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        response = agent_executor.invoke({
            "input": user_query,
        })
        
        # –í—ã–≤–æ–¥–∏–º —Ñ–∏–Ω–∞–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç –∞–≥–µ–Ω—Ç–∞
        print("\nüí° –û—Ç–≤–µ—Ç –ê–≥–µ–Ω—Ç–∞:")
        print(response["output"])


if __name__ == "__main__":
    main()